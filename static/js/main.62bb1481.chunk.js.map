{"version":3,"sources":["components/Header.js","components/Card.js","requests.js","calculations.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","city","headerStyle","handleChange","e","value","target","setState","handleSubmit","props","searchCity","handleClose","className","style","visibility","this","type","placeholder","onChange","onClick","id","Component","Card","boxShadow","maxWidth","height","margin","marginTop","display","flexDirection","alignItems","padding","backgroundImage","changeUnit","title","country","src","imgSrc","alt","fontSize","temp","celsius","pressure","wind","humidity","weatherRequest","kelvinConversion","kelvin","kel","parseInt","kelvinToCelsius","Math","round","kelvinToFehrenheit","celsiusConversion","fehrenheitConversion","fehr","App","requestCity","a","axios","get","res","data","name","sys","main","speed","weather","icon","alert","setTimeout","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.62bb1481.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './component-styles/header.css';\nimport { FiSearch } from 'react-icons/fi';\nimport { AiFillCloseSquare } from 'react-icons/ai';\n\n\nexport class Header extends Component {\n    state = {\n        city: '',\n        headerStyle: 'visible'\n    }\n    handleChange = e => {\n        const value = e.target.value\n        this.setState({\n            city: value\n        })\n    }\n    handleSubmit = e => {\n        this.props.searchCity(this.state.city);\n        this.setState({\n            ...this.state,\n            city: ''\n        })\n        this.props.handleClose();\n    }\n\n    render() {\n        return (\n            <div className=\"header-container\" style={{ visibility : this.props.headerStyle ? \"visible\" : \"hidden\"}}>\n                <div className=\"header\">\n                    <input type=\"text\" placeholder=\"Search for City\" onChange={this.handleChange} value={this.state.city}/>\n                    <button onClick={this.handleSubmit} ><FiSearch /></button>\n                    <AiFillCloseSquare id=\"close-button\" onClick={this.props.handleClose}/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Header\n","import React, { Component } from 'react'\nimport { BsCompass, BsDroplet } from 'react-icons/bs';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { FiWind } from 'react-icons/fi';\nimport './component-styles/card.css';\n\nexport class Card extends Component {\n    render() {\n        const myStyle = {\n            boxShadow: \"1px 1px 10px\",\n            maxWidth: \"350px\",\n            height: \"90vh\",\n            margin: \"auto\",\n            marginTop: \"40px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            padding: \"20px\",\n            backgroundImage: \"linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%)\"\n        \n        }\n        return (\n            <div className=\"container\" style={myStyle}>\n                <div className=\"card-header\">\n                    <div id=\"search\"><GiHamburgerMenu onClick={this.props.handleClose}/></div>\n                    <div id=\"degrees\">\n                        <label className=\"switch\">\n                            <input type=\"checkbox\" onChange={this.props.changeUnit}/>\n                            <span className=\"slider square\" title=\"Change Measurement\"></span>\n                        </label>\n                    </div>\n                </div>\n                <h1 className=\"city\">{this.props.city}<sup>{this.props.country}</sup></h1>\n                <div className=\"weather-info\">\n                    <div className=\"weather-icon\"><img className=\"icon-image\" src={this.props.imgSrc} alt=\"Logo\"/>\n              </div>\n                    <div className=\"temperature\" style={{ fontSize: '30px' }}>{this.props.temp}&#176;{this.props.celsius ? \"C\" : \"F\"}</div>\n                </div>\n                <div className=\"extra-info\">\n                    <div className=\"pressure\">\n                    <BsCompass className=\"icon\"/> PRESSURE<div className=\"info\">{this.props.pressure} hPa</div>\n                    </div>\n                    <div className=\"wind\"><FiWind className=\"icon\"/>WIND<div className=\"info\">{this.props.wind} m/s</div>\n                    </div>\n                    <div className=\"humidity\"><BsDroplet className=\"icon\"/>HUMIDITY<div className=\"info\">{this.props.humidity} %</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Card\n","export const GIF_API = \"S0stSBzRqMA6o2NlCgTbr3Il0XTwjnqW\";\nexport const WEATHER_API = \"6d74f2a36b7c7e62dbcfa8021a7af37b\";\n\nexport const GIPHYrequest = `https://api.giphy.com/v1/gifs/search?api_key=S0stSBzRqMA6o2NlCgTbr3Il0XTwjnqW`;\n\nexport const weatherRequest = `https://api.openweathermap.org/data/2.5/weather`;\n","\nexport const kelvinConversion = (kelvin) => {\n    const kel = parseInt(kelvin)\n    const kelvinToCelsius = Math.round(kel - 273.15);\n    const kelvinToFehrenheit = Math.round(9/5 * (kel - 273) + 32);\n    return { kelvinToCelsius, kelvinToFehrenheit}\n} \n\n\nexport const celsiusConversion = (celsius) => {\n    return Math.round((celsius / 5) * 9 + 32);\n}\n\nexport const fehrenheitConversion = (fehr) => {\n    return Math.round((fehr - 32) * 5 / 9);\n}\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport { weatherRequest, WEATHER_API } from \"./requests\";\nimport {\n  kelvinConversion,\n  celsiusConversion,\n  fehrenheitConversion,\n} from \"./calculations\";\n\nclass App extends React.Component {\n  state = {\n    city: \"Cairo\",\n    country: \"\",\n    temp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    humidity: \"\",\n    celsius: true,\n    headerStyle: false,\n    imgSrc: \"\",\n  };\n  requestCity = async (city) => {\n    try {\n      const res = await axios.get(\n        `${weatherRequest}?q=${city}&appid=${WEATHER_API}`\n      );\n      this.setState({\n        city: res.data.name,\n        country: res.data.sys.country,\n        temp: this.state.celsius\n          ? kelvinConversion(res.data.main.temp).kelvinToCelsius\n          : kelvinConversion(res.data.main.temp).kelvinToFehrenheit,\n        pressure: res.data.main.pressure,\n        humidity: res.data.main.humidity,\n        wind: res.data.wind.speed,\n        celsius: this.state.celsius ? true : false,\n        imgSrc: `https://openweathermap.org/img/wn/${res.data.weather[0].icon}@2x.png`,\n      });\n    } catch (err) {\n      alert(\"City not found!\");\n    }\n  };\n  componentDidMount() {\n    this.requestCity(this.state.city);\n  }\n  searchCity = (city) => {\n    setTimeout(this.requestCity(city), 1000);\n  };\n  changeUnit = () => {\n    this.setState({\n      ...this.state,\n      celsius: !this.state.celsius,\n      temp: this.state.celsius\n        ? celsiusConversion(this.state.temp)\n        : fehrenheitConversion(this.state.temp),\n    });\n  };\n  handleClose = () => {\n    this.setState({\n      ...this.state,\n      headerStyle: !this.state.headerStyle,\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          searchCity={this.searchCity}\n          headerStyle={this.state.headerStyle}\n          handleClose={this.handleClose}\n        />\n        <Card\n          city={this.state.city}\n          country={this.state.country}\n          temp={this.state.temp}\n          pressure={this.state.pressure}\n          wind={this.state.wind}\n          humidity={this.state.humidity}\n          celsius={this.state.celsius}\n          handleClose={this.handleClose}\n          changeUnit={this.changeUnit}\n          imgSrc={this.state.imgSrc}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}